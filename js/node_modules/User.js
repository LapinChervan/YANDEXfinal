var User = function(name, password) {
	this.name = name;	
	this.password = password;
	this.categories = { 
		accounts: ["Кошелек","Банк"], 
		costs: ["Продукты","Авто","Дети","Одежда","Подарки","Лекарства"],  
		gain: ["Зарплата"] 
	};
	this.mainCurr = 'uah';
	this.history = {};
	this.total = { 	  
		costs: {
			thisMonth: 0 + this.mainCurr,
			priorMont: 0 + this.mainCurr,
			thisYear: 0 + this.mainCurr,
			priorYear: 0 + this.mainCurr
		},
		gain: {
			thisMonth: 0 + this.mainCurr,
			priorMont: 0 + this.mainCurr,
			thisYear: 0 + this.mainCurr,
			priorYear: 0 + this.mainCurr
		}
	};
	this.currency = { 
		uah: {
		    rub: 0,
		    usd: 0,
			eur: 0
		},
		rub: {
			uah: 0,
			usd: 0,
			eur: 0
		},
		usd: {
			uah: 0,
			rub: 0,
			eur: 0
		},
		eur: {
			uah: 0,
			rub: 0,
			usd: 0
		}
	};
};

User.prototype = (function() {

	function isObject(obj) {
        return Object.prototype.toString.call(obj) !== '[object Object]' ? false : true;
	}

	function newCategory(type, category) {
		var arr = this.categories[type];
		if (arr && category) {
			arr.push(category);
			return true;
		}
		return false;
	}

	function removeCategory(type, category) {
		var arr = this.categories[type];
		if (arr && arr.indexOf(category) !== -1) {
			arr = arr.splice(arr.indexOf(category), 1);
			return true;
		}
		return false;
	}

	function renameCategory(type, oldCategory, newCategory) {
		var arr = this.categories[type];
		if (arr && arr.indexOf(oldCategory) !== -1 && newCategory) {
			arr = arr.splice(arr.indexOf(oldCategory), 1, newCategory);
			return true;
		}
		return false;
	}

	function setMainCurr(dataCurr) {
        var mainCurr = this.mainCurr;
        this.currency[mainCurr] = dataCurr;
        var currency = this.currency,
            mainVal = currency[mainCurr],
            elem, key, valuta, j;
        for (key in mainVal) {
            elem = currency[key];
            valuta = Math.round(1 / mainVal[key] * 100) / 100;
            elem[mainCurr] = valuta;
            for (j in elem) {
                if (j !== mainCurr) {
                    elem[j] = Math.round(valuta * mainVal[j] * 100) / 100;
                }
            }
	    }
    }

    function changeMainCurr(curr) {
        this.mainCurr = curr;
    }

	function newTransaction(type, data) {
		var arr = this.history[type];
		if (arr && isObject(data)) {
			arr.push(data);
			return true;
		}
		return false;
	}

	return {
		newCategory: newCategory,
		removeCategory: removeCategory,
		renameCategory: renameCategory,
		setMainCurr: setMainCurr,
		newTransaction: newTransaction,
        changeMainCurr: changeMainCurr
	}
})();

module.exports = User;
